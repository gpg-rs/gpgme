name: Continuous Integration
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always
jobs:
  test:
    name: Test Suite (${{ matrix.os }}, rust-${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
          - os: ubuntu-latest
            rust: nightly
          - os: macos-latest
            rust: stable
    env:
      GPGME_DEBUG: 9
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install -y --no-install-recommends libgpgme11-dev

      - name: Install dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: brew install gpgme

      - name: Install rust
        run: rustup default ${{ matrix.rust }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose --no-fail-fast

  docker-static:
    name: Test Suite (linux, docker, musl)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build docker container
        run: docker build -f docker/Dockerfile.static -t test-build .

      - name: Run tests in container
        run: docker run test-build

  docker-windows:
    name: Test Suite (windows, docker)
    runs-on: windows-2022
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build docker container
        run: docker build --build-arg WIN_VARIANT=ltsc2022 -f docker/Dockerfile.windows -t test-build .

      - name: Run tests in container
        run: docker run test-build

  semver:
    name: Check semver violations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
